import copy


# 就是个可变对象，与列表，集合，字典这样的可变对象一致
class Student(object):
    pass


if __name__ == '__main__':
    # 结论1：对于外层是可变对象来说：
    #      1.浅拷贝
    #           1.1 可以拷贝外层对象，
    #           1.2 无法拷贝内层对象（不管是可变还是不可变对象，地址都不会变）
    #      2.深拷贝
    #           2.1 可以拷贝外层对象
    #           2.2 根据内层对象可变还是不可变区分：
    #               1.若内层是不可变对象的话，无法拷贝内层对象
    #               2.若内存是可变对象的话，可以拷贝
    # 结论2：对于外层是不可变对象来说：
    #       1.浅拷贝
    #           1.1 无法拷贝外层对象
    #           1.2 无法拷贝内层对象（不管是可变还是不可变对象，地址都不会变）
    #       2.深拷贝
    #           2.1 根据内层对象是可变还是不可变对象区分：
    #               1.若内层对象是不可变对象，则无法拷贝外层对象
    #               2.若内层对象是可变对象，则可以拷贝外层对象
    #           2.2 根据内层对象是可变还是不可变对象区分：
    #               1.若内层对象是不可变对象，则无法拷贝内层对象
    #               2.若内层对象是可变对象，则可以拷贝内层对象
    # 可变对象嵌套不可变对象
    a = [1, 2, 3, (4, 5)]
    b = copy.copy(a)
    c = copy.deepcopy(a)
    # 地址均不同，对外层对象均可以拷贝
    print(id(a))  # 140517104773152
    print(id(b))  # 140517105822448
    print(id(c))  # 140517105789360
    print('-' * 20)
    # 地址均相同，内层对象是不可变时，均不可以拷贝
    print(id(a[3]))  # 140517104466432
    print(id(b[3]))  # 140517104466432
    print(id(c[3]))  # 140517104466432
    print('-' * 40)

    # 不可变对象嵌套可变对象
    a = (1, 2, 3, [4, 5])
    b = copy.copy(a)
    c = copy.deepcopy(a)
    print(id(a))  # 140453618448912
    print(id(b))  # 140453618448912
    print(id(c))  # 140453618449008
    print('-' * 20)
    print(id(a[3]))  # 140453617960512
    print(id(b[3]))  # 140453617960512
    print(id(c[3]))  # 140453888223264
    print('-' * 40)
